<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.d13</groupId>
    <artifactId>my-spring-cloud-alibaba-examples</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>
    <name>My Spring Cloud Alibaba Examples</name>

    <!-- 统一管理jar包版本 -->
    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <spring-cloud.version>2021.0.5</spring-cloud.version>
<!--        <spring-boot.version>2.6.13</spring-boot.version>-->
        <!--因为这是最新的2.x中最新的版本-->
        <spring-boot.version>2.7.18</spring-boot.version>
        <spring-cloud-alibaba-dependencies.version>2021.0.6.2</spring-cloud-alibaba-dependencies.version>
        <!--slf4j与 Logback 主版本兼容（1.7.x → 1.2.x，2.0.x → 1.4.x）-->
        <!--下面这个版本会报异常-->
<!--        <slf4j.version>2.0.9</slf4j.version>-->
<!--        <logback.version>1.4.14</logback.version>-->
        <!--下面这个版本可以正常启动-->
        <slf4j.version>1.7.30</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <lombook.version>1.18.30</lombook.version>
        <!--分布式事务Seata-->
        <seata.version>2.3.0</seata.version>
        <mysql.version>8.0.29</mysql.version>
        <!--spring-boot repackage 插件的版本-->
        <spring-boot-maven-plugin.version>2.7.18</spring-boot-maven-plugin.version>
        <!--统一管理编译插件的版本，不知道能否成功-->
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    </properties>

    <!--依赖声明-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--分布式事务-->
            <!--
                spring-cloud-alibaba-dependencies-2021.0.6.2.pom中已经默认引入了seata的相关依赖：
                  <seata.version>1.6.1</seata.version>
                  <dependency>
                    <groupId>io.seata</groupId>
                    <artifactId>seata-spring-boot-starter</artifactId>
                    <version>${seata.version}</version>
                  </dependency>
            -->
            <!--分布式事务结束-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombook.version}</version>
            </dependency>
            <!--日志大门 SLF4J
                出现异常情况暂时注释掉。
            -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!--日志结束-->
            <!--spring boot 依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring cloud  依赖-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--spring-cloud-alibaba 依赖-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba-dependencies.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!--子模块-->
    <modules>
        <module>nacos-examples</module>
        <module>my-test</module>
        <module>seata-examples</module>
        <module>custom-processor-with-processor</module>
        <module>custom-processor-with-processor2</module>
    </modules>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.target}</target>
                        <encoding>UTF-8</encoding>
                        <!-- Set the path of generated source folders. The default path is as follows. Generally,
                        you don't need to set this parameter unless you have your own special needs  -->
                        <!--
                        <generatedSourcesDirectory>${project.build.directory}/generated-sources/</generatedSourcesDirectory>
                        -->
                        <!--d:实地测试，引入注解处理器，会导致Lombok框架的注解失效，所以注释掉。
                              注释掉以后，项目引入自定义注解处理器也正常使生效。
                        -->
                        <!-- Specifies the effective annotation processors. After this parameter is specified,
                        only the configured annotation processors below will take effect. In general, it is
                        unnecessary to specify this parameter, so you can delete all of the following -->
                        <!--                    <annotationProcessors>-->
                        <!--                        <annotationProcessor>-->
                        <!--                            org.d13.SzzBuilderProcessor-->
                        <!--                        </annotationProcessor>-->
                        <!--                    </annotationProcessors>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 添加flatten-maven-plugin插件 这个模块的作用是可以使用${revison}占位符统一管理版本号-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.3.0</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                        <configuration>
                            <!-- 避免IDE将 .flattened-pom.xml 自动识别为功能模块 -->
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                            <pomElements>
                                <parent>expand</parent>
                                <distributionManagement>remove</distributionManagement>
                                <repositories>remove</repositories>
                            </pomElements>
                        </configuration>
                    </execution>
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>